@model OnlineExamCenter.ModelsVM.QuestionDomainVM

@{
    ViewBag.Title = "QuestionDomainDetail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="br-pagebody">
    <h6 class="br-section-label">Question Domain Detail</h6>
    <div class="br-section-wrapper">
        <div class="row">
            <div class="col-lg">
                <a href="@Url.Action("QuestionDomainIndex", "QuestionBank")" class="btn btn-sm btn-info"><i class="fa fa-arrow-left"></i>Back</a>
                <input type="hidden" id="txtQuestionDomainId" value="@Model.Id" />
            </div>
        </div>
        <div class="row mg-t-20">
            <div class="col-lg">
                <h6 class="br-section-label">Question Domain</h6>
                <input class="form-control form-control-dark" id="txtQuestionDomain" value="@Model.Domain" onKeyPress="return checkLength(this,20)" name="QuestionDomain" placeholder="Question Domain" type="text">
            </div><!-- col -->
            <div class="col-lg mg-t-10 mg-lg-t-0">
                <h6 class="br-section-label">Weight</h6>
                <input class="form-control form-control-dark" id="txtQuestionWeight" value="@Model.DomainWeight" onKeyPress="return checkLengthWithNumberOnly(this,event,1)" name="QuestionWeight" placeholder="Domain Weight" type="number">
            </div><!-- col -->
            <div class="col-lg mg-t-10 mg-lg-t-0">
                <h6 class="br-section-label">Status</h6>
                @Html.DropDownList("ddlStatus", new SelectList(ViewBag.StatusList, "StatusId", "StatusName", Model.StatusId), "---Select Status-- - ", new { @class = "form-control form-control-dark" })
            </div><!-- col -->
        </div><!-- row -->
        <div class="row pd-t-20">
            <div class="col-lg mg-t-10 mg-lg-t-0">
                <h6 class="br-section-label">Description</h6>
                @Html.TextArea("txtQuestionDescription", Model.Description, new { @class = "form-control" })
                @*<textarea class="form-control form-control-dark" id="txtQuestionDescription" value="@Model.Description" onKeyPress="return checkLength(this,150)" rows="3" name="QuestionDescription" placeholder="Domain Description" type="text"></textarea>*@
            </div>
            <div class="col-lg mg-t-10 mg-lg-t-0">
            </div>
            <div class="col-lg mg-t-10 mg-lg-t-0">
            </div>
        </div>
        <div class="row pd-t-20">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-info" onclick="UpdateQuestionDomain();" />
            </div>
        </div>

    </div>
</div>
<script type="text/javascript">
    function UpdateQuestionDomain() {
        var domain = $('#txtQuestionDomain').val();
        var statusId = $('#ddlStatus').val();
        var domainId = $('#txtQuestionDomainId').val();
        var description = $('#txtQuestionDescription').val();
        var weight = $('#txtQuestionWeight').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("UpdateQuestionDomain", "QuestionBank")",
            data: { domainId: domainId, domain: domain, statusId: statusId, description: description, questionweight: weight },
        success: function (result) {
            if (result.IsSuccess)
                toastr.success(result.Message);
            else
                toastr.error(result.Message);
        },
        error: function (result, textStatus, jqXHR) {

        }
    });
    }
    function checkLength(el, len) {
        if (el.value.length > len) {
            toastr.warning("Limit Exceed");
            return false;
        }
        else
            return true;
    }
    function checkLengthWithNumberOnly(el, evt, len) {
        if (el.value.length > len) {
            toastr.warning("Limit Exceed");
            return false;
        }
        else if (isNumber(evt)) {
            return true;
        }
        else {
            return false;
        }
    }
    function isNumber(evt) {
        var iKeyCode = (evt.which) ? evt.which : evt.keyCode
        if (iKeyCode != 46 && iKeyCode > 31 && (iKeyCode < 48 || iKeyCode > 57)) {
            toastr.warning("Only Number");
            return false;
        }

        return true;
    }    
</script>